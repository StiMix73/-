import json
import telebot
from telebot import types
from telegram import ParseMode
import config
from random import randint

bot = telebot.TeleBot(config.TOKEN)


def find_film_genre(message):
    with open('films.json', 'r', encoding='utf-8') as f:
        films = []
        js = json.load(f)

        if message.text == 'üåè–í—Å–µ —Ñ–∏–ª—å–º—ã':
            for film in js:
                films.append(film)
            return films

        else:
            genr = message.text.lower()
            for film in js:
                if genr in js[film]['genre']:
                    films.append(film)
            if len(films) > 1:
                return films
            else:
                return None


def print_films_genre(message, films):
    if films is None:
        bot.send_message(message.chat.id, '–§–∏–ª—å–º–æ–≤ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, '
                                          '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.')
    with open('films.json', 'r', encoding='utf-8') as f:
        js = json.load(f)

    if len(js) <= len(films):
        text = '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤:\n\n'

    else:
        text = '–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É:\n\n'

    keyboard = home_keyboard()
    i = 1

    for film in films:
        minidesk = js[film]['desc'].split()
        minidesk = minidesk[0] + ' ' + minidesk[1] + ' ' + minidesk[2] + '...\n'
        lss = f"[{minidesk}]({js[film]['link']})"
        text += '*' + js[film]['name'] + '*' + \
                f"({js[film]['year']}): " + lss + "\n"
        i += 1

    bot.send_message(message.chat.id,
                     text,
                     reply_markup=keyboard,
                     parse_mode=ParseMode.MARKDOWN,
                     disable_web_page_preview=True)


def print_film(message, film):
    with open('films.json', 'r', encoding='utf-8') as f:
        js = json.load(f)
        photo = js[film]['image']
        text = '*' + js[film]['name'] + '*' + ':\n' + js['1']['desc'] + \
               '\n\n*–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:* ' + js['1']['year']
        keyboard = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–ö–∏–Ω–æ–ø–æ–∏—Å–∫",
                                          url=js[film]['link'])
        keyboard.add(btn1)
        bot.send_photo(message.chat.id,
                       photo,
                       caption=text,
                       reply_markup=keyboard,
                       parse_mode=ParseMode.MARKDOWN)


@bot.message_handler(commands=['start', 'home', 'help'])
def start(message):
    if message.text in ['/start', '/home', '/help']:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in
                       ['üé≤–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º', 'üåè–í—Å–µ —Ñ–∏–ª—å–º—ã', 'üé¨–ü–æ –∂–∞–Ω—Ä–∞–º']])
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, _{}_! –Ø –±–æ—Ç —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –ª—É—á—à–∏—Ö —Ñ–∏–ª—å–º–æ–≤!\n\n'
                         '–¢—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –≤—ã–±—Ä–∞—Ç—å:\n\n'
                         '*–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º* - —è –ø—Ä–∏—Å—ã–ª–∞—é —Ç–µ–±–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º, –Ω–æ –∏–∑ –ª—É—á—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏!\n'
                         '*–í—Å–µ —Ñ–∏–ª—å–º—ã* - –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤!\n'
                         '*–ü–æ –∂–∞–Ω—Ä–∞–º* - —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π –∂–∞–Ω—Ä –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ —Å —ç—Ç–∏–º –∂–∞–Ω—Ä–æ–º!'
                         .format(message.from_user.first_name),
                         reply_markup=keyboard,
                         parse_mode=ParseMode.MARKDOWN)
        bot.register_next_step_handler(message, start_1)

    elif message.text == 'üîô–î–æ–º–æ–π':
        home(message)

    else:
        bot.send_message(message.chat.id,
                         '–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏.')
        bot.register_next_step_handler(message, start)


def start_1(message):
    if message.text == 'üé≤–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º':
        with open('films.json', 'r', encoding='utf-8') as f:
            js = json.load(f)
            n = len(js)
            x = randint(1, n)
            print_film(message, str(x))
        bot.register_next_step_handler(message, start_1)

    elif message.text == 'üåè–í—Å–µ —Ñ–∏–ª—å–º—ã':
        print_films_genre(message, find_film_genre(message))
        bot.register_next_step_handler(message, start)

    elif message.text == 'üé¨–ü–æ –∂–∞–Ω—Ä–∞–º':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*[types.KeyboardButton(name) for name in
                       ['–î—Ä–∞–º–∞', '–ö–æ–º–µ–¥–∏—è', '–£–∂–∞—Å—ã', 'üîô–î–æ–º–æ–π']])
        bot.send_message(message.chat.id,
                         '–ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π –∂–∞–Ω—Ä –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.',
                         reply_markup=keyboard)
        bot.register_next_step_handler(message, genre)

    else:
        bot.send_message(message.chat.id,
                         '–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏.')
        bot.register_next_step_handler(message, start_1)


def genre(message):
    if message.text == 'üîô–î–æ–º–æ–π':
        home(message)
        return None

    try:
        print_films_genre(message,
                          find_film_genre(message))

    except:
        bot.send_message(message.chat.id,
                         '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –∂–∞–Ω—Ä–æ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è!')
        bot.register_next_step_handler(message, genre)
        return None

    bot.register_next_step_handler(message, start)


def home(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in
                   ['üé≤–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º', 'üåè–í—Å–µ —Ñ–∏–ª—å–º—ã', 'üé¨–ü–æ –∂–∞–Ω—Ä–∞–º']])
    bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ–º–æ–π.',
                     reply_markup=keyboard)
    bot.register_next_step_handler(message, start_1)


def home_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menus = types.KeyboardButton("üîô–î–æ–º–æ–π")
    keyboard.add(menus)
    return keyboard


bot.infinity_polling()
